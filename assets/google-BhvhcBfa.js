import{j as e}from"./index-C31dYG1O.js";async function o(e,o){return new Promise((o,t)=>{const i=document.createElement("script");i.src=e,i.async=!0,i.defer=!0,i.onload=()=>{o()},i.onerror=()=>t(new Error(`Failed to load script: ${e}`)),document.head.appendChild(i)})}let t=null;const i=async e=>{try{const o=await fetch("https://www.googleapis.com/oauth2/v2/userinfo",{headers:{Authorization:`Bearer ${e}`}});if(o.ok){const e=await o.json();return{username:e.name||e.email.split("@")[0],email:e.email}}{const e=await o.json();throw new Error(`Failed to fetch user info: ${e.error.message}`)}}catch(o){return null}};async function a(){if("undefined"==typeof google||!google.accounts.oauth2)try{await o("https://accounts.google.com/gsi/client"),await o("https://apis.google.com/js/api.js")}catch(e){}}async function r(e,o){return await a(),(null==e?void 0:e.accessToken)?e:await(async()=>{let e={};if(await a(),!window.google||!window.google.accounts||!window.google.accounts.oauth2)throw new Error("Google API is not available. Please try again later.");const o=await new Promise((e,o)=>{t=google.accounts.oauth2.initTokenClient({client_id:"111515033736-dffaqu4qg36n2ovfhpaa7qgtndd3u4q2.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email",callback:async t=>{(null==t?void 0:t.access_token)?e(t):o(new Error("Failed to obtain access token."))},error_callback:e=>{o(e)}}),t.requestAccessToken({prompt:"consent"})});e.accessToken=o.access_token;const r=await i(o.access_token);if(null==r?void 0:r.email)return await s(),e={...e,...r},e;throw new Error("Failed to fetch user information.")})()}const s=async()=>{if("undefined"!=typeof gapi)return new Promise(e=>{gapi.load("picker",{callback:e})})},n=async(e,o)=>{if(!(null==e?void 0:e.accessToken))throw new Error("No access token found. Please sign in again.");if(!o)throw new Error("File or folder ID is required.");const t=await r(e);await(async()=>{if("undefined"!=typeof gapi)return new Promise(e=>{gapi.load("drive-share",{callback:e})})})();try{const e=new gapi.drive.share.ShareClient;return e.setOAuthToken(t.accessToken),e.setItemIds([o]),e.showSettingsDialog(),{success:!0,message:"Share dialog opened successfully."}}catch(i){throw new Error(`Failed to open share dialog: ${i.message}`)}},c=async(e,o)=>{if(!(null==e?void 0:e.accessToken))throw new Error("No access token found. Please sign in again.");if(!o)throw new Error("File or folder ID is required.");const t=await r(e);try{const e=await fetch(`https://www.googleapis.com/drive/v3/files/${o}?fields=webViewLink,permissions&supportsAllDrives=true`,{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(!e.ok){if(401===e.status){t.accessToken=await l();const e=await fetch(`https://www.googleapis.com/drive/v3/files/${o}?fields=webViewLink,permissions&supportsAllDrives=true`,{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(!e.ok){const o=await e.json();throw new Error(`Failed to fetch share link: ${o.error.message}`)}return(await e.json()).webViewLink||null}{const o=await e.json();throw new Error(`Failed to fetch share link: ${o.error.message}`)}}return(await e.json()).webViewLink||null}catch(i){throw new Error(`Failed to fetch share link: ${i.message}`)}},l=async()=>new Promise((e,o)=>{t?t.requestAccessToken({prompt:"",callback:async t=>{if(t&&t.access_token){const o=await i(t.access_token);if(o){userStore.getUserByEmail(o.email)&&userStore.updateUser(o.email,{accessToken:t.access_token})}e(t.access_token)}else o(new Error("Failed to refresh access token"))}}):o(new Error("Token client not initialized"))}),w=async e=>{const o=await r(e);await s();const t=await new Promise((e,t)=>{(new google.picker.PickerBuilder).setOAuthToken(o.accessToken).addView((new google.picker.DocsView).setIncludeFolders(!0).setSelectFolderEnabled(!0).setParent("root")).addView(new google.picker.DocsView(google.picker.ViewId.DOCS).setLabel("Google Drive").setMimeTypes("application/vnd.google-apps.document")).addView(new google.picker.DocsView(google.picker.ViewId.SHAREDADA).setLabel("Shared drives")).addView(new google.picker.DocsView(google.picker.ViewId.RECENTLY_PICKED).setLabel("Recent")).enableFeature(google.picker.Feature.SUPPORT_DRIVES).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).setCallback(o=>{o.action===google.picker.Action.PICKED&&e(o.docs[0])}).build().setVisible(!0)});return o.parent=t,o},d=async e=>{await a();const o=await r(e);await s();const t=new google.picker.DocsView(google.picker.ViewId.DOCS).setMimeTypes("application/json").setQuery("*.treegridio");return new Promise((e,i)=>{(new google.picker.PickerBuilder).addView(t).setOAuthToken(o.accessToken).setCallback(t=>{t.action===google.picker.Action.PICKED&&e({...o,file:t.docs[0]})}).build().setVisible(!0)})};async function p(o,t){if(!o||"object"!=typeof o)throw new Error("Invalid path");let i=await(async(e,o)=>{if(!(null==o?void 0:o.accessToken))throw new Error("No access token found. Please sign in again.");if(!(null==e?void 0:e.id))throw new Error("Please select a file to read first.");const t=await fetch(`https://www.googleapis.com/drive/v3/files/${e.id}?fields=id,name,version,modifiedTime,description,lastModifyingUser&supportsAllDrives=true`,{method:"GET",headers:new Headers({Authorization:`Bearer ${o.accessToken}`})});if(!t.ok){const e=await t.json();throw null==e?void 0:e.error}const i=await t.json(),a=await fetch(`https://www.googleapis.com/drive/v3/files/${e.id}?alt=media&supportsAllDrives=true`,{method:"GET",headers:new Headers({Authorization:`Bearer ${o.accessToken}`})});if(a.ok)return{content:await a.text(),metadata:i};const r=await a.json();throw new Error("Error reading file content:",r)})(o,t);return{path:o,content:(null==i?void 0:i.content)?e(i.content):null}}async function u(e,o,t){return await(async(e,o,t)=>{var i,a,r;if(!e||"object"!=typeof e)throw new Error("Invalid or missing data object");if(o&&"object"!=typeof o)throw new Error("Invalid path");const s=null==(i=null==o?void 0:o.parent)?void 0:i.id;if(s){let e;const o=await fetch(`https://www.googleapis.com/drive/v3/files/${s}/permissions/me?supportsAllDrives=true`,{method:"GET",headers:new Headers({Authorization:`Bearer ${t.accessToken}`})});if(401===o.status){t.accessToken=await l();const o=await fetch(`https://www.googleapis.com/drive/v3/files/${s}/permissions/me?supportsAllDrives=true`,{headers:new Headers({Authorization:`Bearer ${t.accessToken}`})});if(!o.ok){const e=await o.json();throw new Error(`Failed to verify permissions: ${e.error.message}`)}e=await o.json()}else{if(!o.ok){const e=await o.json();throw new Error(`Failed to check permissions: ${e.error.message}`)}e=await o.json()}if(!["writer","owner"].includes(e.role))throw new Error("You do not have write permission for the selected folder. Please choose another folder.")}const n=JSON.stringify(e,null,2),c=new Blob([n],{type:"application/json"}),w=new FormData,d=void 0!==(null==o?void 0:o.id)&&""!==(null==(a=null==o?void 0:o.id)?void 0:a.trim()),p=d?`https://www.googleapis.com/upload/drive/v3/files/${null==(r=null==o?void 0:o.id)?void 0:r.trim()}?uploadType=multipart&fields=id&supportsAllDrives=true`:"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&supportsAllDrives=true",u=d?"PATCH":"POST";if(!d){const e={name:o.fileName,mimeType:"application/json",parents:s?[s]:[]};w.append("metadata",new Blob([JSON.stringify(e)],{type:"application/json"}))}w.append("file",c);const g=`boundary_${crypto.randomUUID().replace(/-/g,"")}`,h={name:o.fileName},f=btoa(n),m=[`--${g}`,"Content-Type: application/json; charset=UTF-8","",JSON.stringify(h),`--${g}`,"Content-Transfer-Encoding: base64","",f,`--${g}--`].join("\r\n"),k=await fetch(p,{method:u,headers:{Authorization:`Bearer ${t.accessToken}`,"Content-Type":`multipart/related; boundary=${g}`},body:m});if(!k.ok){const e=await k.json();throw new Error(`Upload failed: ${e.error.message}`)}return await k.json()})(e,o,t)}const g=!0,h="GoogleDrive";export{r as authorize,i as fetchUserInfo,c as getShareLink,g as isAuth,n as openShareDialog,d as pickFile,w as pickFolder,p as readJsonAttachment,h as type,u as writeObjectToJsonAttachment};
