import{j as e}from"./index-CbwSZaXz.js";const i="showOpenFilePicker"in window&&"showSaveFilePicker"in window,t=new Map,n="cachedFiles",r=()=>{const e=sessionStorage.getItem(n);return e?JSON.parse(e):[]},a=e=>{const i=r();i.includes(e)||(i.push(e),sessionStorage.setItem(n,JSON.stringify(i)))};async function o(){const[e]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"*/*":[".json",".treegridio"]}}]}),i=await e.getFile(),n=i.name;return t.set(n,{file:i,handle:e}),a(n),[i,e,n]}const l=async()=>{if(!i)return new Promise((e,i)=>{const n=document.createElement("input");n.type="file",n.accept=".json,.treegridio",n.onchange=n=>{const r=n.target.files[0];if(r){const i=r.name;t.set(i,{file:r,handle:null}),a(i),e({mode:"D",file:{name:r.name,id:i,rawFile:r}})}else i(new Error("No file picked"))},n.click()});try{const[e,i,t]=await o();return{mode:"D",file:{handle:i,name:e.name,id:t}}}catch(e){if("AbortError"===e.name)throw new Error("File selection was canceled");throw e}};async function s(n){if(!n||"object"!=typeof n||!n.id)throw new Error("Invalid or missing path");let r;const l=t.get(n.id);if(l)r=l.file;else if(i)try{const[e]=await o();r=e}catch(s){throw"AbortError"===s.name?new Error("File selection was canceled"):s}else{if(!n.rawFile)throw{code:404,error:`No data found with filename ${n.id}`};r=n.rawFile,t.set(n.id,{file:r,handle:null}),a(n.id)}try{const i=await r.text();return{content:e(i),path:{...n,fileName:n.id}}}catch(s){throw{code:404,error:`Failed to read or parse file ${n.id}: ${s.message}`}}}async function c(e,n){if(!e||"object"!=typeof e)throw new Error("Invalid or missing data object");if(!n||"object"!=typeof n||!n.fileName)throw new Error("Invalid or missing path");const o=JSON.stringify(e,null,2);if(!i){const e=new Blob([o],{type:"application/json"}),i=URL.createObjectURL(e),r=document.createElement("a");r.href=i,r.download=n.fileName,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i);const l=new File([e],n.fileName,{type:"application/json"});return t.set(n.fileName,{file:l,handle:null}),a(n.fileName),{...n,id:n.fileName}}try{const i=t.get(n.fileName),l=null==i?void 0:i.handle;if(!l){if(r().includes(n.fileName)){const[i]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"application/json":[".json",".treegridio"]}}],suggestedName:n.fileName}),r=await i.getFile();return t.set(n.fileName,{file:r,handle:i}),a(n.fileName),c(e,{...n,handle:i})}throw new Error(`No file handle available for ${n.fileName}. Cannot overwrite file.`)}"granted"!==await l.queryPermission({mode:"readwrite"})&&await l.requestPermission({mode:"readwrite"});const s=await l.createWritable();await s.write(o),await s.close();const d=await l.getFile();return t.set(n.fileName,{file:d,handle:l}),a(n.fileName),{...n,id:n.fileName,handle:l}}catch(l){if("AbortError"===l.name)throw new Error("File write permission was denied");throw l}}function d(){return!0}const w="Browser";export{d as authorize,l as pickFile,s as readJsonAttachment,w as type,c as writeObjectToJsonAttachment};
