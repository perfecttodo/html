import{j as e}from"./index-BJq0eM1T.js";const i="showOpenFilePicker"in window&&"showSaveFilePicker"in window,t=new Map;async function n(){const[e]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"*/*":[".json",".treegridio"]}}]}),i=await e.getFile(),n=i.name;return t.set(n,{file:i,handle:e}),[i,e,n]}const r=async()=>{if(!i)return new Promise((e,i)=>{const t=document.createElement("input");t.type="file",t.accept=".json,.treegridio",t.onchange=t=>{const n=t.target.files[0];if(n){const i=n.name;e({mode:"D",file:{name:n.name,id:i,rawFile:n}})}else i(new Error("No file picked"))},t.click()});try{const[e,i,t]=await n();return{mode:"D",file:{handle:i,name:e.name,id:t}}}catch(e){if("AbortError"===e.name)throw new Error("File selection was canceled");throw e}};async function o(r){if(!r||"object"!=typeof r||!r.id)throw new Error("Invalid or missing path");let o;const a=t.get(r.id);if(a)o=a.file;else if(i)try{const[e]=await n();o=e}catch(l){throw"AbortError"===l.name?new Error("File selection was canceled"):l}else{if(!r.rawFile)throw{code:404,error:`No data found with filename ${r.id}`};o=r.rawFile,t.set(r.id,{file:o,handle:null})}try{const i=await o.text();return{content:e(i),path:{...r,fileName:r.id}}}catch(l){throw{code:404,error:`Failed to read or parse file ${r.id}: ${l.message}`}}}async function a(e,n){if(!e||"object"!=typeof e)throw new Error("Invalid or missing data object");if(!n||"object"!=typeof n||!n.fileName)throw new Error("Invalid or missing path");const o=JSON.stringify(e,null,2);if(!i){const e=new Blob([o],{type:"application/json"}),i=URL.createObjectURL(e),r=document.createElement("a");r.href=i,r.download=n.fileName,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i);const a=new File([e],n.fileName,{type:"application/json"});return t.set(n.fileName,{file:a,handle:null}),saveFileToSessionStorage(n.fileName),{...n,id:n.fileName}}try{const e=t.get(n.fileName);let i=null==e?void 0:e.handle;if(!i){const e=await r();if(!e)throw new Error(`No file handle available for ${n.fileName}. Cannot overwrite file.`);i=e.file.handle}"granted"!==await i.queryPermission({mode:"readwrite"})&&await i.requestPermission({mode:"readwrite"});const a=await i.createWritable();await a.write(o),await a.close();const l=await i.getFile();return t.set(n.fileName,{file:l,handle:i}),{...n,id:n.fileName,handle:i}}catch(a){if("AbortError"===a.name)throw new Error("File write permission was denied");throw a}}function l(){return!0}const c="Device";export{l as authorize,r as pickFile,o as readJsonAttachment,c as type,a as writeObjectToJsonAttachment};
