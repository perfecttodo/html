import{j as n}from"./index-BQQkhLQp.js";const e="showOpenFilePicker"in window&&"showSaveFilePicker"in window,t=new Map,o="cachedFiles",i=()=>{const n=sessionStorage.getItem(o);return n?JSON.parse(n):[]},r=n=>{const e=i();e.includes(n)||(e.push(n),sessionStorage.setItem(o,JSON.stringify(e)))};async function a(e){if(!e||"object"!=typeof e||!e.id)throw new Error("Invalid or missing path");if(o=e.id,/^https?:\/\//i.test(o))try{const o=await fetch(e.id);if(!o.ok)throw new Error(`Failed to fetch URL ${e.id}: ${o.statusText}`);const i=await o.text(),a=n(i),s=new URL(e.id).pathname.split("/").pop()||"url_data.json",l=new File([i],s,{type:"application/json"});return t.set(s,{file:l,handle:null}),r(s),{content:a,path:{...e,fileName:s}}}catch(i){throw{code:404,error:`Failed to read or parse URL ${e.id}: ${i.message}`}}var o}async function s(n,o){if(!n||"object"!=typeof n)throw new Error("Invalid or missing data object");if(!o||"object"!=typeof o||!o.fileName)throw new Error("Invalid or missing path");const a=JSON.stringify(n,null,2);if(!e){const n=new Blob([a],{type:"application/json"}),e=URL.createObjectURL(n),i=document.createElement("a");i.href=e,i.download=o.fileName,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(e);const s=new File([n],o.fileName,{type:"application/json"});return t.set(o.fileName,{file:s,handle:null}),r(o.fileName),{...o,id:o.fileName}}try{const e=t.get(o.fileName),l=null==e?void 0:e.handle;if(!l){if(i().includes(o.fileName)){const[e]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"application/json":[".json",".treegridio"]}}],suggestedName:o.fileName}),i=await e.getFile();return t.set(o.fileName,{file:i,handle:e}),r(o.fileName),s(n,{...o,handle:e})}throw new Error(`No file handle available for ${o.fileName}. Cannot overwrite file.`)}"granted"!==await l.queryPermission({mode:"readwrite"})&&await l.requestPermission({mode:"readwrite"});const c=await l.createWritable();await c.write(a),await c.close();const d=await l.getFile();return t.set(o.fileName,{file:d,handle:l}),r(o.fileName),{...o,id:o.fileName,handle:l}}catch(l){if("AbortError"===l.name)throw new Error("File write permission was denied");throw l}}function l(){return!0}const c=async()=>{const n=await async function(){const n=document.createElement("div");n.id="overlay";const e=document.createElement("iframe");e.id="pickerFrame",n.appendChild(e),document.body.appendChild(n),n.style.cssText="\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n    ",e.style.cssText="\n        width: 500px;\n        height: 200px;\n        border: none;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%) scale(0.9);\n        background: white;\n        border: 1px solid #ccc;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        opacity: 0;\n        transition: all 0.3s ease;\n        border-radius: 8px;\n    ",n.offsetWidth,e.offsetWidth,n.style.opacity="1",e.style.opacity="1",e.style.transform="translate(-50%, -50%) scale(1)";const t=Date.now().toString(36)+Math.random().toString(36).substr(2);n.addEventListener("click",o=>{o.target===n&&e.contentWindow.postMessage({type:"cancel",instanceId:t,error:"Clicked outside"},"*")});const o=e.contentDocument||e.contentWindow.document;return o.open(),o.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <meta charset="UTF-8">\n            <style>\n                body {\n                    margin: 0;\n                    padding: 0;\n                    font-family: Arial, sans-serif;\n                    height: 100%;\n                }\n                .file-picker {\n                    width: 100%;\n                    height: 100%;\n                }\n                .container {\n                    padding: 20px;\n                    box-sizing: border-box;\n                    display: flex;\n                    flex-direction: column;\n                    flex-grow: 1;\n                    position: absolute;\n                    inset: 0;\n                }\n                .close-btn {\n                    position: absolute;\n                    top: 10px;\n                    right: 10px;\n                    font-size: 20px;\n                    border: none;\n                    background: none;\n                    cursor: pointer;\n                    color: #666;\n                }\n                .close-btn:hover {\n                    color: #333;\n                }\n                .url {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                }\n                #urlInput {\n                    padding: 8px;\n                    flex-grow: 1;\n                    border: 1px solid #ddd;\n                    border-radius: 4px;\n                }\n                button {\n                    padding: 8px 16px;\n                    background-color: #f0f0f0;\n                    border: 1px solid #ddd;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n                button:hover {\n                    background-color: #e0e0e0;\n                }\n    \n                .button-container {\n                    display: flex;\n                    justify-content: flex-end;\n                    gap: 10px;\n                }\n                .button-container button:first-child {\n                    background-color: #4a90e2;\n                    color: white;\n                }\n                .button-container button:first-child:hover {\n                    background-color: #3a7bc8;\n                }\n                .confirm-btn {\n                    padding: 10px 16px;\n                    background-color: #4a90e2;\n                    color: white;\n                    border: none;\n                    border-radius: 6px;\n                    cursor: pointer;\n                    font-weight: 500;\n                    font-size: 14px;\n                    transition: all 0.2s;\n                    white-space: nowrap;\n                }\n\n            </style>\n        </head>\n        <body>\n            <div class="file-picker">\n                <div class="container">\n                    <button class="close-btn" onclick="closeDialog()">Ã—</button>\n                    <h3>Input a .treegridio URL</h3>\n                    <div class="url">\n                        <input type="text" id="urlInput" placeholder="input .treegridio url..." >\n                        <button class="confirm-btn" onclick="confirmUrl()">Load URL</button>\n                    </div>\n                    \n                </div>\n            </div>\n            <script>\n \n                const instanceId = "${t}";\n\n                function cancel() {\n                    window.parent.postMessage({\n                        type: 'cancel',\n                        instanceId: instanceId,\n                        error: 'Selection cancelled'\n                    }, '*');\n                }\n\n                function closeDialog() {\n                    window.parent.postMessage({\n                        type: 'cancel',\n                        instanceId: instanceId,\n                        error: 'Dialog closed'\n                    }, '*');\n                }\n\n                document.addEventListener('keydown', function(e) {\n                    if (e.key === 'Escape') {\n                        closeDialog();\n                    }else if(e.key==='Enter'){\n                        confirmUrl();\n                    }\n                });\n\n                const sample = 'https://perfecttodo.com/gdgaoxiao.treegridio';\n                function confirmUrl() {\n                    const urlInput = document.getElementById('urlInput');\n                    const selectedItem = urlInput.value.trim();\n                    \n                    if (!selectedItem) {\n                        urlInput.focus();\n                        urlInput.setAttribute('placeholder', 'Please enter a valid URL');\n                        urlInput.classList.add('error');\n                        setTimeout(() => {\n                            urlInput.classList.remove('error');\n                            urlInput.setAttribute('placeholder', sample);\n                        }, 2000);\n                        return;\n                    }\n                    \n                    // Basic URL validation\n                    if (!selectedItem.startsWith('http://') && !selectedItem.startsWith('https://')) {\n                        urlInput.value = '';\n                        urlInput.setAttribute('placeholder', 'URL must start with http:// or https://');\n                        urlInput.classList.add('error');\n                        setTimeout(() => {\n                            urlInput.classList.remove('error');\n                            urlInput.setAttribute('placeholder', sample);\n                        }, 2000);\n                        return;\n                    }\n                    \n                    window.parent.postMessage({\n                        type: 'select',\n                        instanceId: instanceId,\n                        value: selectedItem\n                    }, '*');\n                }\n\n                document.getElementById('urlInput').focus();\n            <\/script>\n        </body>\n        </html>\n    `),o.close(),new Promise((e,o)=>{const i=async r=>{if(r.data.instanceId!==t)return;const a=()=>{window.removeEventListener("message",i),n.style.opacity="0",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)};if("select"===r.data.type){a();try{e({filename:r.data.value})}catch(s){o(s)}}else"cancel"===r.data.type&&(a(),o(new Error(r.data.error)))};window.addEventListener("message",i)})}();return{mode:"U",file:{...n,id:n.filename}}},d="Browser";export{l as authorize,c as pickFile,a as readJsonAttachment,d as type,s as writeObjectToJsonAttachment};
