import{j as g}from"./index-BPVy-DUg.js";const d="showOpenFilePicker"in window&&"showSaveFilePicker"in window,s=new Map,f="cachedFiles",w=()=>{const i=sessionStorage.getItem(f);return i?JSON.parse(i):[]},l=i=>{const e=w();e.includes(i)||(e.push(i),sessionStorage.setItem(f,JSON.stringify(e)))};async function m(){const[i]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"*/*":[".json",".treegridio"]}}]}),e=await i.getFile(),r=e.name;return s.set(r,{file:e,handle:i}),l(r),[e,i,r]}const S=async()=>{if(d)try{const[i,e,r]=await m();return{mode:"D",file:{handle:e,name:i.name,id:r}}}catch(i){throw i.name==="AbortError"?new Error("File selection was canceled"):i}else return new Promise((i,e)=>{const r=document.createElement("input");r.type="file",r.accept=".json,.treegridio",r.onchange=n=>{const o=n.target.files[0];if(!o)e(new Error("No file picked"));else{const t=o.name;s.set(t,{file:o,handle:null}),l(t),i({mode:"D",file:{name:o.name,id:t,rawFile:o}})}},r.click()})};async function E(i){if(!i||typeof i!="object"||!i.id)throw new Error("Invalid or missing path");let e;const r=s.get(i.id);if(r)e=r.file;else if(d)try{const[n]=await m();e=n}catch(n){throw n.name==="AbortError"?new Error("File selection was canceled"):n}else if(i.rawFile)e=i.rawFile,s.set(i.id,{file:e,handle:null}),l(i.id);else throw{code:404,error:`No data found with filename ${i.id}`};try{const n=await e.text();return{content:g(n),path:{...i,fileName:i.id}}}catch(n){throw{code:404,error:`Failed to read or parse file ${i.id}: ${n.message}`}}}async function N(i,e){if(!i||typeof i!="object")throw new Error("Invalid or missing data object");if(!e||typeof e!="object"||!e.fileName)throw new Error("Invalid or missing path");const r=JSON.stringify(i,null,2);if(d)try{const n=s.get(e.fileName),o=n==null?void 0:n.handle;if(!o)if(w().includes(e.fileName)){const[a]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"application/json":[".json",".treegridio"]}}],suggestedName:e.fileName}),F=await a.getFile();return s.set(e.fileName,{file:F,handle:a}),l(e.fileName),N(i,{...e,handle:a})}else throw new Error(`No file handle available for ${e.fileName}. Cannot overwrite file.`);await o.queryPermission({mode:"readwrite"})!=="granted"&&await o.requestPermission({mode:"readwrite"});const c=await o.createWritable();await c.write(r),await c.close();const u=await o.getFile();return s.set(e.fileName,{file:u,handle:o}),l(e.fileName),{...e,id:e.fileName,handle:o}}catch(n){throw n.name==="AbortError"?new Error("File write permission was denied"):n}else{const n=new Blob([r],{type:"application/json"}),o=URL.createObjectURL(n),t=document.createElement("a");t.href=o,t.download=e.fileName,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(o);const c=new File([n],e.fileName,{type:"application/json"});return s.set(e.fileName,{file:c,handle:null}),l(e.fileName),{...e,id:e.fileName}}}function b(){return!0}const p="Browser";export{b as authorize,S as pickFile,E as readJsonAttachment,p as type,N as writeObjectToJsonAttachment};
