import{j as e}from"./index-D4o19w3s.js";const t="showOpenFilePicker"in window&&"showSaveFilePicker"in window,i=new Map,n="cachedFiles",a=()=>{const e=sessionStorage.getItem(n);return e?JSON.parse(e):[]},r=e=>{const t=a();t.includes(e)||(t.push(e),sessionStorage.setItem(n,JSON.stringify(t)))};async function o(){const[e]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"*/*":[".json",".treegridio"]}}]}),t=await e.getFile(),n=t.name;return i.set(n,{file:t,handle:e}),r(n),[t,e,n]}const l=async()=>{if(!t)return new Promise((e,t)=>{const n=document.createElement("input");n.type="file",n.accept=".json,.treegridio",n.onchange=n=>{const a=n.target.files[0];if(a){const t=a.name;i.set(t,{file:a,handle:null}),r(t),e({mode:"D",file:{name:a.name,id:t,rawFile:a}})}else t(new Error("No file picked"))},n.click()});try{const[e,t,i]=await o();return{mode:"D",file:{handle:t,name:e.name,id:i}}}catch(e){if("AbortError"===e.name)throw new Error("File selection was canceled");throw e}};async function s(n){if(!n||"object"!=typeof n||!n.id)throw new Error("Invalid or missing path");if(a=n.id,/^https?:\/\//i.test(a))try{const t=await fetch(n.id);if(!t.ok)throw new Error(`Failed to fetch URL ${n.id}: ${t.statusText}`);const a=await t.text(),o=e(a),l=new URL(n.id).pathname.split("/").pop()||"url_data.json",s=new File([a],l,{type:"application/json"});return i.set(l,{file:s,handle:null}),r(l),{content:o,path:{...n,fileName:l}}}catch(c){throw{code:404,error:`Failed to read or parse URL ${n.id}: ${c.message}`}}var a;let l;const s=i.get(n.id);if(s)l=s.file;else if(t)try{const[e]=await o();l=e}catch(c){if("AbortError"===c.name)throw new Error("File selection was canceled");throw c}else{if(!n.rawFile)throw{code:404,error:`No data found with filename ${n.id}`};l=n.rawFile,i.set(n.id,{file:l,handle:null}),r(n.id)}try{const t=await l.text();return{content:e(t),path:{...n,fileName:n.id}}}catch(c){throw{code:404,error:`Failed to read or parse file ${n.id}: ${c.message}`}}}async function c(e,n){if(!e||"object"!=typeof e)throw new Error("Invalid or missing data object");if(!n||"object"!=typeof n||!n.fileName)throw new Error("Invalid or missing path");const o=JSON.stringify(e,null,2);if(!t){const e=new Blob([o],{type:"application/json"}),t=URL.createObjectURL(e),a=document.createElement("a");a.href=t,a.download=n.fileName,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(t);const l=new File([e],n.fileName,{type:"application/json"});return i.set(n.fileName,{file:l,handle:null}),r(n.fileName),{...n,id:n.fileName}}try{const t=i.get(n.fileName),l=null==t?void 0:t.handle;if(!l){if(a().includes(n.fileName)){const[t]=await window.showOpenFilePicker({types:[{description:"JSON Files",accept:{"application/json":[".json",".treegridio"]}}],suggestedName:n.fileName}),a=await t.getFile();return i.set(n.fileName,{file:a,handle:t}),r(n.fileName),c(e,{...n,handle:t})}throw new Error(`No file handle available for ${n.fileName}. Cannot overwrite file.`)}"granted"!==await l.queryPermission({mode:"readwrite"})&&await l.requestPermission({mode:"readwrite"});const s=await l.createWritable();await s.write(o),await s.close();const d=await l.getFile();return i.set(n.fileName,{file:d,handle:l}),r(n.fileName),{...n,id:n.fileName,handle:l}}catch(l){if("AbortError"===l.name)throw new Error("File write permission was denied");throw l}}function d(){return!0}const w="Browser";export{d as authorize,l as pickFile,s as readJsonAttachment,w as type,c as writeObjectToJsonAttachment};
