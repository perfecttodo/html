import{j as l}from"./index-DlHh3_yb.js";import{p as m}from"./localStoragePickfile-19-vMepH.js";const u="B";function f(e,t){return new Promise((i,n)=>{const s=indexedDB.open(e,1);s.onerror=o=>{n(o.target.error)},s.onsuccess=o=>{i(o.target.result)},s.onupgradeneeded=o=>{const r=o.target.result;r.objectStoreNames.contains(t)||r.createObjectStore(t,{keyPath:"id"})}})}const y=async()=>{const e=await m();return{mode:u,file:{...e,id:e.filename}}};async function g(e){if(!e||typeof e!="object")throw new Error("Invalid or missing path");const t=await f("myDatabase","files");return new Promise((i,n)=>{const r=t.transaction(["files"],"readonly").objectStore("files").get(e.id);r.onerror=c=>{n({code:404,error:`No data found with filename ${e.id}`})},r.onsuccess=c=>{const a=c.target.result;if(!a)n({code:404,error:`No data found with filename ${e.id}`});else{const d=l(a.data);i({content:d,path:{...e,fileName:e.id}})}}})}async function j(e,t){if(!e||typeof e!="object")throw new Error("Invalid or missing data object");if(!t||typeof t!="object")throw new Error("Invalid or missing path");const i=await f("myDatabase","files");return new Promise((n,s)=>{const r=i.transaction(["files"],"readwrite").objectStore("files"),c=JSON.stringify(e,null,2),a=r.put({id:t.fileName,data:c});a.onerror=d=>{s(d.target.error)},a.onsuccess=()=>{n({...t,id:t.fileName})}})}const p="Browser";export{y as pickFile,g as readJsonAttachment,p as type,j as writeObjectToJsonAttachment};
