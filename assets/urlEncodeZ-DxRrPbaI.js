import{J as e}from"./index-DG77VZUt.js";import{p as n}from"./urlPickfile-CC-EIamk.js";async function t(n){if(!n||"object"!=typeof n||!n.id)throw new Error("Invalid or missing path");try{const t=await async function(e){const n=decodeURIComponent(e),t=atob(n),o=new Uint8Array(t.length);for(let i=0;i<t.length;i++)o[i]=t.charCodeAt(i);const r=new Blob([o]).stream().pipeThrough(new DecompressionStream("gzip"));return await new Response(r).text()}(n.id);return{content:e.parse(t),path:{...n}}}catch(t){throw{code:404,error:`Failed to read or parse URL ${n.id}: ${t.message}`}}}async function o(n,t){if(!n||"object"!=typeof n)throw new Error("Invalid or missing data object");if(!t||"object"!=typeof t)throw new Error("Invalid or missing path");const o=await async function(e){const n=new Blob([e]).stream().pipeThrough(new CompressionStream("gzip")),t=await new Response(n).blob(),o=await new Promise(e=>{const n=new FileReader;n.onload=()=>e(n.result.split(",")[1]),n.readAsDataURL(t)});return encodeURIComponent(o)}(e.stringify(n,null,2));return{...t,id:o}}function r(){return!0}const i=async()=>{const e=await n();return{mode:"Z",file:{...e,id:e.filename}}},a="urlz";export{r as authorize,i as pickFile,t as readJsonAttachment,a as type,o as writeObjectToJsonAttachment};
